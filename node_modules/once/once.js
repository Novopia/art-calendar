<<<<<<< HEAD
module.exports = once
=======
var wrappy = require('wrappy')
module.exports = wrappy(once)
>>>>>>> bae8b53bddfcc67e4136f42d11c589aaeece7440

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function () {
      return once(this)
    },
    configurable: true
  })
})

function once (fn) {
<<<<<<< HEAD
  var called = false
  return function () {
    if (called) return
    called = true
    return fn.apply(this, arguments)
  }
=======
  var f = function () {
    if (f.called) return f.value
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  f.called = false
  return f
>>>>>>> bae8b53bddfcc67e4136f42d11c589aaeece7440
}
